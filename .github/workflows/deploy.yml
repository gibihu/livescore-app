name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build frontend assets
        run: npm run build

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, gd, zip
          coverage: none

      - name: Install Composer dependencies
        run: composer install --optimize-autoloader --no-dev --no-interaction

      - name: Create deployment archive
        run: |
          # สร้าง archive ที่มี built assets และ dependencies
          tar -czf deployment.tar.gz \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='node_modules' \
            --exclude='tests' \
            --exclude='.env.example' \
            --exclude='README.md' \
            --exclude='package-lock.json' \
            .

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Upload and Deploy
        run: |
          # อัปโหลด deployment archive ไปยัง server
          scp -o StrictHostKeyChecking=no deployment.tar.gz smsbkk@${{ secrets.STAGING_SERVER_IP }}:/tmp/

          # Deploy บน server
          ssh -o StrictHostKeyChecking=no smsbkk@${{ secrets.STAGING_SERVER_IP }} << 'EOF_SERVER_OPS'
            cd /home/smsbkk

            # Backup ปัจจุบัน (ถ้ามี)
            if [ -d "SYSTEMSMSBKK" ]; then
              mv SYSTEMSMSBKK SYSTEMSMSBKK_backup_$(date +%Y%m%d_%H%M%S)
            fi

            # สร้าง directory ใหม่
            mkdir -p SYSTEMSMSBKK
            cd SYSTEMSMSBKK

            # แตก deployment archive
            tar -xzf /tmp/deployment.tar.gz
            rm /tmp/deployment.tar.gz

            echo 'Deployment files extracted on server.'

            # ตั้งค่า permissions
            chmod -R 775 storage bootstrap/cache
            echo 'Permissions set completed on server.'

            # สร้าง storage link
            php artisan storage:link
            echo 'Laravel storage:link executed.'

            # Sync public folder
            rsync -avz --delete \
              --exclude 'index.php' \
              /home/smsbkk/SYSTEMSMSBKK/public/ \
              /home/smsbkk/public_html/
            echo 'Public folder synced from SYSTEMSMSBKK to public_html.'

            # สร้าง custom index.php
            cat > /home/smsbkk/public_html/index.php << 'END'
          <?php

          use Illuminate\Foundation\Application;
          use Illuminate\Http\Request;

          define('LARAVEL_START', microtime(true));

          if (file_exists($maintenance = __DIR__.'/../SYSTEMSMSBKK/storage/framework/maintenance.php')) {
              require $maintenance;
          }

          require __DIR__.'/../SYSTEMSMSBKK/vendor/autoload.php';

          $app = require_once __DIR__.'/../SYSTEMSMSBKK/bootstrap/app.php';

          $app->handleRequest(Request::capture());
          END
            echo 'Custom index.php created in public_html.'

            # รัน Laravel commands
            php artisan migrate --force
            php artisan cache:clear
            php artisan config:clear
            php artisan route:clear
            php artisan view:clear

            echo 'Laravel Artisan commands executed on server.'

            # ลบ backup เก่าที่เก็บไว้เกิน 3 วัน
            find /home/smsbkk -name "SYSTEMSMSBKK_backup_*" -type d -mtime +3 -exec rm -rf {} + 2>/dev/null || true

          EOF_SERVER_OPS

          echo 'Deploy completed successfully.'

      - name: Cleanup
        if: always()
        run: |
          rm -f deployment.tar.gz || true
